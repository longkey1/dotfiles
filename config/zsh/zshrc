# include .zshrc.antigen
[[ -f ${ZDOTDIR}/zshrc.antigen ]] && source ${ZDOTDIR}/zshrc.antigen

# fpath functions
[[ -d ${ZDOTDIR}/functions ]] && export FPATH="${ZDOTDIR}/functions:$FPATH"

# functions
function excutable() {
  type "$1" &> /dev/null;
}

# variables
_ostype=$(uname -s | tr '[:upper:]' '[:lower:]')

# common environment variables
export EDITOR="vim"
export VISUAL="vim"
export PAGER="less"

# history
export HISTFILE="${ZDOTDIR}/history"
export HISTSIZE=100000
export SAVEHIST=${HISTSIZE}


# oh-my-zsh
export DISABLE_AUTO_TITLE=true

# no create core dump file
ulimit -c 0

# path .bin
export PATH="${HOME}/.bin:${PATH}"

# go
if excutable go && [[ -d "${HOME}/work" ]]; then
  export GOPATH="${HOME}/work"
  export PATH="${GOPATH}/bin:${PATH}"
fi

# git/diff-highlight
#
## for mac
[[ -d /usr/local/share/git-core/contrib/diff-highlight ]] && export PATH=${PATH}:/usr/local/share/git-core/contrib/diff-highlight
## for arch
[[ -d /usr/share/git/diff-highlight ]] && export PATH=$PATH:/usr/share/git/diff-highlight
## for debian or ubuntu
[[ -d /usr/share/doc/git/contrib/diff-highlight ]] && exprt PATH=${PATH}:/usr/share/doc/git/contrib/diff-highlight

# direnv
if excutable direnv; then
  export DIRENV_WARN_TIMEOUT=100s
  eval "$(direnv hook zsh)"
fi



# alias
excutable ls && alias ll="ls -l"
excutable vim && alias vi="vim"
excutable jq && alias jq="jq -C"
excutable colordiff && alias diff="colordiff"
excutable slack-term && alias slack-term="slack-term -config ${XDG_CONFIG_HOME}/slack-term/slack-term"



# grep
if excutable grep; then
  alias grep="grep -I --color=auto"
  setopt nonomatch # for grep's glob
fi

# tmux
if excutable tmux; then
  export TMUX_TMPDIR="${XDG_RUNTIME_DIR}"
  if [[ "${_ostype}" = "darwin" ]]; then
    alias tmux="tmux -f ${XDG_CONFIG_HOME}/tmux/tmux.conf -2 -u"
  else
    alias tmux="tmux -f ${XDG_CONFIG_HOME}/tmux/tmux.conf"
  fi
fi

# less
if excutable less; then
  export LESS="-R -F -X"
  if [[ $(excutable source-highlight-esc.sh) ]]; then
    export LESSOPEN="| source-highlight-esc.sh %s"
  fi
fi

# ansible
excutable ansible && export ANSIBLE_NOCOWS=1

# make
excutable make && export MAKEFLAGS="-j$(grep processor /proc/cpuinfo | wc -l)"

# select-history and select-path
#
## fzf
if excutable fzf; then
  # historical search with peco binded to ^r
  function select-history-fzf() {
    # historyを番号なし、逆順、最初から表示。順番を保持して重複を削除。カーソルの左側の文字列をクエリにしてfzfを起動。\nを改行に変換
    BUFFER="$(\history -nr 1 | awk '!a[$0]++' | fzf --query "${LBUFFER}" --prompt 'HISTORY>' | sed 's/\\n/\n/')"
    # カーソルを文末に移動
    CURSOR=${#BUFFER}
    # refresh
    zle -R -c
  }
  zle -N select-history-fzf
  bindkey '^r' select-history-fzf

  # path selection with peco binded to ^f
  function select-path-fzf() {
    local filepath="$(find . | grep -v '/\.' | fzf --prompt 'PATH>')"
    [[ -z "${filepath}" ]] && return
    if [[ -n "${LBUFFER}" ]]; then
      BUFFER="${LBUFFER}${filepath}"
    else
      if [[ -d "${filepath}" ]]; then
        BUFFER="cd ${filepath}"
      elif [[ -f "${filepath}" ]]; then
        BUFFER="${EDITOR} ${filepath}"
      fi
    fi
    CURSOR=${#BUFFER}
  }

  zle -N select-path-fzf
  # Ctrl+f で起動
  bindkey '^f' select-path-fzf
#
## peco
elif excutable peco; then
  # historical search with peco binded to ^r
  function select-history-peco() {
    # historyを番号なし、逆順、最初から表示。順番を保持して重複を削除。カーソルの左側の文字列をクエリにしてpecoを起動。\nを改行に変換
    BUFFER="$(\history -nr 1 | awk '!a[$0]++' | peco --query "${LBUFFER}" | sed 's/\\n/\n/')"
    # カーソルを文末に移動
    CURSOR=${#BUFFER}
    # refresh
    zle -R -c
  }
  zle -N select-history-peco
  # Ctrl+f
  bindkey '^r' select-history-peco

  # path selection with peco binded to ^f
  function select-path-peco() {
    local filepath="$(find . | grep -v '/\.' | peco --prompt 'PATH>')"
    [[ -z "${filepath}" ]] && return
    if [ -n "${LBUFFER}" ]; then
      BUFFER="${LBUFFER}${filepath}"
    else
      if [[ -d "${filepath}" ]]; then
        BUFFER="cd ${filepath}"
      elif [[ -f "${filepath}" ]]; then
        BUFFER="${EDITOR} ${filepath}"
      fi
    fi
    CURSOR=${#BUFFER}
  }
  zle -N select-path-peco
  # Ctrl+f
  bindkey '^f' select-path-peco
fi

# gg
if excutable ghq; then
  ## fzf
  if excutable fzf; then
    alias gg='cd $(ghq list -p | fzf)'
  ## peco
  elif excutable ghq && excutable peco; then
    alias gg='cd $(ghq list -p | peco)'
  fi
fi

# historica backward/forward search with linehead string binded to ^p/^n
autoload history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey "^p" history-beginning-search-backward-end
bindkey "^n" history-beginning-search-forward-end

# update compinit
autoload -U compinit
compinit

# include files
[[ -f ${ZDOTDIR}/zshrc.${_ostype} ]] && source ${ZDOTDIR}/zshrc.${_ostype}
[[ -f ${ZDOTDIR}/zshrc.local ]] && source ${ZDOTDIR}/zshrc.local
