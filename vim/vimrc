syntax on                    " シンタックス
filetype plugin on           " ファイルタイププラグイン
colorscheme jellybeans       " カラースキーム

set autoindent               " オートインデント
set number                   " 行番号表示
set list                     " 不可視文字を表示
set listchars=trail:-        " 空白を-で表示
set expandtab                " tabをスペースに置き換えない
set tabstop=2                " tabをスペース何文字分で表示するかの指定
set tabpagemax=100           " tabを最大100開けるようにする
set shiftwidth=2             " オートインデント時に挿入されるスペース文字数
set softtabstop=2            " tabキーで挿入されるスペース文字数
set splitright               " 新しいウィンドウは右側に追加される
set visualbell               " beep音をヴィジュアル化
set noerrorbells             " beep音をならないように

" netrw
let g:netrw_liststyle = 3

" 保存時に行末の空白を除去するコマンド
command TrimTrailingBlank %s/\s\+$//ge
augroup trim_trailing_blank_space
  autocmd!
  autocmd BufWritePre * :TrimTrailingBlank"
augroup END

" IME切り替えの待ち時間を短くする
set ttimeoutlen=1

" quickrun
let g:quickrun_config = {}
let g:quickrun_config.markdown = {'runner': 'shell', 'command': 'glow'}

" abbreviations
augroup abbreviations_md_ts
  autocmd FileType markdown iabbrev <buffer> :ts: <C-R>=strftime("%Y-%m-%d %H:%M")<CR>
augroup END

" just filetype
augroup filetypedetect_justfile
  autocmd!
  autocmd BufNewFile,BufRead justfile setf make
augroup END

" open-browser.vim
let g:netrw_nogx = 1 " disable netrw's gx mapping.
nmap gx <Plug>(openbrowser-smart-search)
vmap gx <Plug>(openbrowser-smart-search)

" for mac
if has('mac') && filereadable(expand('~/.vim/vimrc.mac'))
  source ~/.vim/vimrc.mac
" for linux
elseif has('linux') && filereadable(expand('~/.vim/vimrc.linux'))
  source ~/.vim/vimrc.linux
endif
" for local
if filereadable(expand('~/.vim/vimrc.local'))
  source ~/.vim/vimrc.local
endif
